buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}

apply plugin: 'forge'
apply plugin: 'signing'
import de.undercouch.gradle.tasks.download.Download

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "0.1.1"

group= "com.github.bartimaeusnek.croploadcore" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "CropLoadCore"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
    replaceIn "CropLoadCore.java"
    replace "@version@", project.version
    runDir = "eclipse"
}
jar {
	archiveName = archivesBaseName + "-" + version + ".jar"
    manifest {
        attributes 'FMLCorePlugin': 'com.github.bartimaeusnek.ASM.CropStickTransformer_plugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}
file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

repositories {
    mavenLocal()
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
}


dependencies {
    compile "net.industrial-craft:industrialcraft-2:${config.ic2.version}:dev"
}

task getNatura(type: Download){
	onlyIf{
		!file("libs/natura-1.7.10-2.2.0.1.jar").exists()
	}
	src "https://media.forgecdn.net/files/2216/125/natura-1.7.10-2.2.0.1.jar"
    dest file("libs/natura-1.7.10-2.2.0.1.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}
task getThaucraftDev(type: Download, dependsOn: "getNatura") {
    onlyIf {
        !file("libs/Thaumcraft-deobf-1.7.10-4.2.3.5.jar").exists()
    }
    src "https://minecraft.curseforge.com/projects/thaumcraft/files/2227552/download"
    dest file("libs/Thaumcraft-deobf-1.7.10-4.2.3.5.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

task getGregTech(type: Download, dependsOn: "getThaucraftDev") {
    onlyIf {
        !file("libs/gregtech-${config.gregtech.version}-dev.jar").exists()
    }
    src "http://jenkins.usrv.eu:8080/job/Gregtech-5-Unofficial/${config.gregtech.jenkinsbuild}/artifact/build/libs/gregtech-${config.gregtech.version}-dev.jar"
    dest file("libs/gregtech-${config.gregtech.version}-dev.jar")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

tasks.setupCIWorkspace.dependsOn getGregTech
tasks.setupDevWorkspace.dependsOn getGregTech
tasks.setupDecompWorkspace.dependsOn getGregTech
tasks.compileJava.dependsOn getGregTech

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    
}

task signJar(dependsOn: 'reobf'){
    doLast {
        ant.signjar(
            destDir: jar.destinationDir,
            jar: jar.getArchivePath(),
            alias: findProperty('keyStoreAlias') ?: '',
            keystore: findProperty('keyStore') ?: '',
            storepass: findProperty('keyStorePass') ?: '',
            digestalg: findProperty('signDigestAlg') ?: '',
            tsaurl: findProperty('signTSAurl') ?: '',
            verbose: true
            )
    }
}